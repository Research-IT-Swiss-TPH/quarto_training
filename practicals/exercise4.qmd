---
title: My outbreak report
author: Helene Langet
date: 2023-12-31

format: docx

execute:
  echo: false
  warning: false
---

```{r}
library(dplyr)
library(ggplot2)
library(skimr)
library(gtsummary)
```

```{r}
# Load the dataset stored in the "df1.RData" file
load(file = "df1.RData")
```

```{r}
# Convert the 'sex', 'confirmed', and 'death' columns from their current data type to factors
df <- df |>
  dplyr::mutate(dplyr::across(c(sex, confirmed, death),
                              as.factor))
```

## Overview

```{r}
# Identify the start and end dates of the outbreak by finding the minimum and maximum values in the 'date' column
start_date <- min(df$date)
end_date <- max(df$date)
```

```{r}
# Define the period of interest for the report
period_start <- start_date
period_end <- end_date
```

```{r}
# Filter the data frame to include only the cases that occurred within the defined period
subdf <- df |>
  dplyr::filter(date >= period_start & date <= period_end)
```

The outbreak ran from **date** to **date**. This report covers the period **date** to **date**. Over the studied period, there were **N** cases, including **N** confirmed cases and **N** confirmed deaths.

## Population characteristics

**cross-reference** provides a summary of the demographic characteristics and the outcome proportion for the overall population, while **cross-reference** compares the characteristics of individuals who died versus those who are still alive.

```{r}
#| tbl-cap: Population characteristics

#Table 1
#Generate a summary table displaying population characteristics
subdf |>                               
  dplyr::select(age,
                sex,
                bmi,
                confirmed,
                death) |>
  gtsummary::tbl_summary()
```

```{r}
#| tbl-cap: Demographic characteristics of deceased vs. alive

#Table 2
#Generate a summary table comparing the demographic characteristics
#of individuals who died versus those who are still alive
subdf |>                                                      
  dplyr::select(sex,
                age,
                bmi,
                death) |>
  gtsummary::tbl_summary(by = death) |>
  gtsummary::add_overall()
```

## Outbreak evolution

**cross-reference figure** illustrates the outbreak's progression, which can be divided into distinct phases.

```{r}
#| fig-cap: Weekly count of all cases, confirmed cases and deaths

#Figure 1 
# Aggregate the data to get the weekly count of all cases, confirmed cases and deaths
weekly_data <- subdf |>
  dplyr::group_by(week) |>
  dplyr::summarise(count = dplyr::n(),
                   confirmed_count = sum(confirmed == "1"),
                   death_count = sum(death == "1"))

# Plot the weekly cases, confirmed cases and deaths
ggplot2::ggplot(weekly_data, ggplot2::aes(x = week)) +                        
  ggplot2::geom_line(ggplot2::aes(y = count,
                                  color = "All cases"),
                     size = 1) +
  ggplot2::geom_line(ggplot2::aes(y = confirmed_count,
                                  color = "Confirmed cases"),
                     size = 1) +
  ggplot2::geom_line(ggplot2::aes(y = death_count,
                                  color = "Confirmed deaths"),
                     size = 1) +
  ggplot2::labs(x = "Week",
                y = "Count",
                color = "Legend") +
  ggplot2::scale_color_manual(values = c("All cases" = "#440e54",
                                         "Confirmed cases" = "#f8766d",
                                         "Confirmed deaths" = "#128984")) +
  ggplot2::theme_minimal() +
  ggplot2::theme(panel.grid.major.y = ggplot2::element_line(linewidth = 0.5,
                                                            linetype = "dashed",
                                                            color = "grey"), 
                 panel.grid.minor.y = ggplot2::element_line(linewidth = 0.5,
                                                            linetype = "dashed",
                                                            color = "grey"),
                 panel.grid.major.x = ggplot2::element_blank(),
                 panel.grid.minor.x = ggplot2::element_blank())
```

## Logistic regression model

In this section, we build and evaluate a logistic regression model to understand the relationship between certain variables and the likelihood of death among confirmed cases.

The logistic regression model uses `death` as the response variable, and `bmi` and `age` as predictor variables. It is implemented in R as shown in the code chunk referenced by **cross-reference**.

```{r}
#| echo: true

#Logistic regression model
model <- glm(death ~ bmi + age,
             subdf |> dplyr::filter(confirmed == "1"),
             family = binomial)
```

The results of the logistic regression model are summarized in the formatted regression table, which is presented in **cross-reference**.

```{r}
#| tbl-cap: Formatted regression table

#Table 3
gtsummary::tbl_regression(model,
                          exponentiate = TRUE)
```

## Appendix

The dataset includes the following variables:

-   `age` = age of the individual (continuous variable) ;
-   `sex` = sex of the individual (binary variable: 1 = male, 2 = female) ;
-   `bmi` = Body Mass Index (BMI) of the individual (continuous variable) ;
-   `confirmed` = flag of confirmed cases (binary variable: 0 = no, 1 = yes)
-   `death` = death outcome (binary variable: 0 = alive, 1 = died)

```{r}
subdf |>
  skimr::skim()
```
