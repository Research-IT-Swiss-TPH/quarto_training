---
title: "Quarto training for R - Exercise 3"
author: Helene Langet
editor: visual
format: html
---

## Instructions

### Overall objective

You need to generate the following MS Word report in the section *Start of the report*. All text in bold will need to be replaced.

### Task 1

-   Add a table of content

You can use a table of contents and/or section numbering to make it easier for readers to navigate your document. Do this by adding the toc and/or number-sections options to document options. Note that these options are typically specified at the root level because they are shared across all formats.

### Task 2 - Inline

-   Execute the automated calculation of the start and end dates within the text "The outbreak ran from **calculation of start date** to **calculation of end date**."
-   Execute the automated calculation of the number of cases, confirmed cases and deaths within the text "Over this period, there were **calculation of number of cases** cases, including **calculation of number of confirmed cases** confirmed cases and **calculation of number of deaths** confirmed deaths."

### Task 3 - Table

-   Create a table summarising the characteristics of the

### Task 4 - Figure

-   Change the height of the figure
-   Change the width of the figure
-   Add a caption for the figure
-   Add a label for the figure

### Task 5 - Dataset

Actually you were given the wrong dataset. Can you reload? Do you see an advantage of using Quarto over R.

### Task 7 - Use parameters

We would like to generate 2 reports - one for the period 2021, the other one for the period 2022

### Task 6 -

-   Customise the Word document with the Swiss TPH template

If you want to customize the appearance of MS Word output, Pandoc supports a special type of template called a reference document. Here is an example of specifying a custom reference document for docx:

```         
format:
  docx:
    reference-doc: custom-reference-doc.docx
```

Reference documents include sample text that uses all of the output styles used by Pandoc.

To use a reference doc template, just copy it to your documentâ€™s directory and reference it as shown above. [Use Word templates](https://quarto.org/docs/output-formats/ms-word-templates.html)

### Task 8 - Finalise the document

-   Once you are done, delete all the instructions (lines 16 to 58).

## Start of the report

```{r}
load(file = "../data/df1.RData")
```

```{r}
df <- df |>
  dplyr::mutate(dplyr::across(c(sex, confirmed, death),
                              as.factor))
```

## Overview

```{r}
start_date <- min(df$date)
end_date <- max(df$date)
```

```{r}
period_start <- start_date
period_end <- end_date
```

```{r}
subdf <- df |>
  dplyr::filter(date >= period_start & date <= period_end)
```

The outbreak ran from **calculated date** to **calculated date**. This report covers the period **calculated date** to **calculated date**. Over the studied period, there were **calculated N** cases, including **calculated N** confirmed cases and **calculated N** confirmed deaths.

Table **cross-reference** provides a summary of the overall population characteristics, while Table **cross-reference** compares the characteristics of individuals who died versus those who are still alive.

```{r}

```


```{r}

```

## Outbreak evolution

Figure **cross-reference** illustrates the outbreak's progression, which can be divided into distinct phases.

```{r}
# Aggregate the data to get the weekly count of all cases, confirmed cases and deaths
weekly_data <- subdf |>
  dplyr::group_by(week) |>
  dplyr::summarise(count           = dplyr::n(),
                   confirmed_count = sum(confirmed),
                   death_count     = sum(death))

# Plot the weekly count of all cases, confirmed cases and deaths
weekly_data |>
  ggplot2::ggplot(ggplot2::aes(x = week)) +
  ggplot2::geom_line(ggplot2::aes(y     = count,
                                  color = "All cases"),
                     size = 1) +
  ggplot2::geom_line(ggplot2::aes(y     = confirmed_count,
                                  color = "Confirmed cases"),
                     size = 1) +
  ggplot2::geom_line(ggplot2::aes(y     = death_count,
                                  color = "Confirmed deaths"),
                     size = 1) +
  ggplot2::labs(title = "Weekly count of all cases, confirmed cases and deaths",
                x     = "Week",
                y     = "Count",
                color = "Legend")
```

## Logistic regression model

In this section, we build and evaluate a logistic regression model to understand the relationship between certain variables and the likelihood of death among confirmed cases.

The logistic regression model is constructed using the following formula:

* Response variable: death (binary outcome: 0 = alive, 1 = died)
* Predictor variables:
  * bmi 
  * age

```{r}

```

## Appendix (Codebook)

Variables:

* `age` = age of the case
* `sex` = binary variable (1 = male, 2 = female)
* `bmi` = continuous variable coding for Body Mass Index (BMI)
* `confirmed` = binary variable (0 = male, 1 = confirmed)
* `death` = binary variable (0 = alive, 1 = died)


```{r}
subdf |>
  skimr::skim()
```