---
title: "Quarto training for R - Exercise 3"
author: Unknown author
editor: visual
format: html
---

```{r}
# Load the dataset stored in the "df1.RData" file located in the "../data/" directory
load(file = "../data/df1.RData")
```

```{r}
# Convert the 'sex', 'confirmed', and 'death' columns from their current data type to factors
df <- df |>
  dplyr::mutate(dplyr::across(c(sex, confirmed, death),
                              as.factor))
```

## Overview

```{r}
# Identify the start and end dates of the outbreak by finding the minimum and maximum values in the 'date' column
start_date <- min(df$date)
end_date <- max(df$date)
```

```{r}
# Define the period of interest for the report
period_start <- start_date
period_end <- end_date
```

```{r}
# Filter the data frame to include only the cases that occurred within the defined period
subdf <- df |>
  dplyr::filter(date >= period_start & date <= period_end)
```

The outbreak ran from **date** to **date**. This report covers the period **date** to **date**. Over the studied period, there were **N** cases, including **N** confirmed cases and **N** confirmed deaths.

## Population characteristics

**cross-reference** provides a summary of the demographic characteristics and the outcome proportion for the overall population, while **cross-reference** compares the characteristics of individuals who died versus those who are still alive.

```{r}
# Generate a summary table displaying population characteristics

```

```{r}
# Generate a summary table comparing the demographic characteristics of individuals who died versus those who are still alive

```

## Outbreak evolution

**cross-reference figure** illustrates the outbreak's progression, which can be divided into distinct phases.

```{r}
# Aggregate the data to get the weekly count of all cases, confirmed cases and deaths
weekly_data <- subdf |>
  dplyr::group_by(week) |>
  dplyr::summarise(count = dplyr::n(),
                   confirmed_count = sum(confirmed == "1"),
                   death_count = sum(death == "1"))

# Plot the weekly count of all cases, confirmed cases and deaths
weekly_data |>
  ggplot2::ggplot(ggplot2::aes(x = week)) +
  ggplot2::geom_line(ggplot2::aes(y     = count,
                                  color = "All cases"),
                     size = 1) +
  ggplot2::geom_line(ggplot2::aes(y     = confirmed_count,
                                  color = "Confirmed cases"),
                     size = 1) +
  ggplot2::geom_line(ggplot2::aes(y     = death_count,
                                  color = "Confirmed deaths"),
                     size = 1) +
  ggplot2::labs(title = "Weekly count of all cases, confirmed cases and deaths",
                x     = "Week",
                y     = "Count",
                color = "Legend")
```

## Logistic regression model

In this section, we build and evaluate a logistic regression model to understand the relationship between certain variables and the likelihood of death among confirmed cases.

The logistic regression model uses `death` as the reponse variable, and `bmi` and `age` as predictor variables. It is implemented in R as shown in the code chunk referenced by **cross-reference**.

```{r}

```

The results of the logistic regression model are summarized in the formatted regression table, which is presented in **cross-reference**.

```{r}

```

## Appendix

The dataset includes the following variables:

-   `age` = age of the individual (continuous variable) ;
-   `sex` = sex of the individual (binary variable: 1 = male, 2 = female) ;
-   `bmi` = Body Mass Index (BMI) of the individual (continuous variable) ;
-   `confirmed` = flag of confirmed cases (binary variable: 0 = no, 1 = yes)
-   `death` = death outcome (binary variable: 0 = alive, 1 = died)

```{r}
subdf |>
  skimr::skim()
```
