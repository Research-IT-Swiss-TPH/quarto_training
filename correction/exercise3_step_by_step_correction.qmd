---
title:  ‚≠ê Build a MS Word report
subtitle: ‚úÖ Step-by-step correction
author:
  - name:
      given: H√©l√®ne
      family: Langet
    affiliations:
      - name: Swiss TPH Research-IT
    orcid: 0000-0002-6758-2397
    email: helene.langet@swisstph.ch
license: "CC-BY"
date: last-modified
editor: source
lang: en-US

format:
  html:
    default: true
    embed-resources: true
    code-block-bg: true
    code-block-border-left: "#c03427"
    theme: cosmo
    toc: true
    number-sections: true
    anchor-sections: true
    title-block-banner: true
    comments:
      hypothesis: 
        theme: classic
    code-links:
      - text: üìã Instructions
        href: ../practical/exercise3_instructions.html
    format-links: [pdf]
  pdf:
    default: true
    toc: true
    number-sections: true
    
execute:
  echo: fenced
  warning: false
    
resources:
  - exercise3_step_by_step_correction.pdf
---

This page provides a step-by-step correction for building a simple MS Word report.

::: callout-important
To get the most out of your learning experience, attempt to solve the exercise on your own before looking at this correction. Trial and error is an essential part of the learning process, helping to strengthen your understanding and build confidence. Remember, simply copying and pasting the solution without trying to solve the exercise by yourself first will limit your long-term growth. Take your time, experiment, and learn actively!
:::

## Setup basic elements of the Quarto notebook

All the basic elements you need to setup are defined in the YAML header at the beginning of your Quarto notebook.

``` yaml
---
title: My outbreak report # <1>
author: Helene Langet     # <2>
date: "2023-12-31"        # <3>

format: docx              # <4>

execute:
  echo: false             # <5>
  warning: false          # <6>
---
```

1.  Update the `title` option in the Quarto notebook. Quotation marks are optional.
2.  Set the `author` option to your name. Quotation marks are optional.
3.  Add the `date` option and set it to **"2023-12-31"**.
4.  Set the `format` option to **docx** to generate a MS Word document.
5.  Add the `echo` option and set it to **false** to hide code in the rendered document.
6.  Add the `warning` option and set it to **false** to hide warnings in the rendered document.

## Create publication-ready tables

Creating publication-ready tables in R often involves leveraging specialized packages. Popular options include `gtsummary`, `gt` and `flextable`. In what follows, we will use `gtsummary` which is an excellent package for creating summary statistics tables. To install it, run the command ``install.packages("gtsummary")`` in your R console. 

```{r}
#| echo: false
# Load the dataset stored in the "df1.RData" file
load(file = "df1.RData")
```

```{r}
#| echo: false
# Convert the 'sex', 'confirmed', and 'death' columns from their current data type to factors
df <- df |>
  dplyr::mutate(dplyr::across(c(sex, confirmed, death),
                              as.factor))
```

```{r}
#| echo: false
# Identify the start and end dates of the outbreak by finding the minimum and maximum values in the 'date' column
start_date <- min(df$date)
end_date <- max(df$date)
```

```{r}
#| echo: false
# Define the period of interest for the report
period_start <- start_date
period_end <- end_date
```

```{r}
#| echo: false
# Filter the data frame to include only the cases that occurred within the defined period
subdf <- df |>
  dplyr::filter(date >= period_start & date <= period_end)
```

```{r}
#| tbl-cap: Population characteristics #<8>

subdf |>                               #<7>
  dplyr::select(age,
                sex,
                bmi,
                confirmed,
                death) |>
  gtsummary::tbl_summary()             
```

7. Use the `gtsummary::tbl_summary()` function to create a table that summarizes the demographic characteristics (`age`, `sex`, `bmi`) and outcome frequencies (`confirmed`, `death`) for all cases.
8. Add a caption to the table by using the `tbl-cap` chunk option. 

```{r}
#| tbl-cap: Demographic characteristics of deceased vs. alive #<10>

subdf |>                                                      #<9>
  dplyr::select(sex,
                age,
                bmi,
                death) |>
  gtsummary::tbl_summary(by = death) |>
  gtsummary::add_overall()
```

9. Create a table summarising the demographic characteristics of individuals who died versus those who are still alive.
10. Add a caption to the table by using the `tbl-cap` chunk option.

## Customise figures

```{r}
#| fig-cap: Weekly count of all cases, confirmed cases and deaths                     #<18>
#| fig-width: 8                                                                       #<20>
#| fig-height: 4                                                                      #<20>
                
# Aggregate the data to get the weekly count of all cases, confirmed cases and deaths
weekly_data <- subdf |>
  dplyr::group_by(week) |>
  dplyr::summarise(count = dplyr::n(),
                   confirmed_count = sum(confirmed == "1"),
                   death_count = sum(death == "1"))

# Plot the weekly cases, confirmed cases and deaths
ggplot2::ggplot(weekly_data, ggplot2::aes(x = week)) +
  ggplot2::geom_line(ggplot2::aes(y = count,
                                  color = "All cases"),
                     size = 1) +
  ggplot2::geom_line(ggplot2::aes(y = confirmed_count,
                                  color = "Confirmed cases"),
                     size = 1) +
  ggplot2::geom_line(ggplot2::aes(y = death_count,
                                  color = "Confirmed deaths"),
                     size = 1) +
  ggplot2::labs(x = "Week",
                y = "Count",
                color = "Legend") +
  ggplot2::scale_color_manual(values = c("All cases" = "#440e54",
                                         "Confirmed cases" = "#f8766d",
                                         "Confirmed deaths" = "#128984")) +
  ggplot2::theme_minimal() +
  ggplot2::theme(panel.grid.major.y = ggplot2::element_line(linewidth = 0.5, linetype = "dashed", color = "grey"),
                 panel.grid.minor.y = ggplot2::element_line(linewidth = 0.5, linetype = "dashed", color = "grey"),
                 panel.grid.major.x = ggplot2::element_blank(),
                 panel.grid.minor.x = ggplot2::element_blank())
```

18. Add a caption to the figure.
20. Adjust the dimensions of the figure until you are happy with it

-   [ ] Replace the placeholder text in bold with a cross-reference to the figure.

@fig-1 illustrates the outbreak's progression, which can be divided into distinct phases.

> "***cross-reference** illustrates the outbreak's progression, which can be divided into distinct phases.*"

21. Beautify the plot using ggplot options

## Code

-   [ ] Display the code chunk for your R implementation of the logistic regression (and only this code chunk) in the rendered MS Word document ;
-   [ ] Add a caption to the code chunk ;
-   [ ] Assign a label to the code chunk ;
-   [ ] Replace the placeholder text in bold with a cross-reference to the code chunk.

The logistic regression model uses `death` as the reponse variable, and `bmi` and `age` as predictor variables. It is implemented in R as shown in the code chunk referenced by @lst-test

```{r}
#| lst-label: lst-test
#| lst-cap: R code

coeffs <- glm(death ~ bmi + age,                        # <22>
              subdf |> dplyr::filter(confirmed == "1"),
              family = binomial)
```

22. Implement a logistic regression model based on description in the Quarto notebook.

The results of the logistic regression model are summarized in the formatted regression table, which is presented in @tbl-3.

```{r}
#| label: tbl-3                                        # <25>
#| tbl-cap: Formatted regression table                 # <24>

gtsummary::tbl_regression(coeffs, exponentiate = TRUE) # <23>
```

23. Create a table summarizing the odds ratios from the logistic regression model.
24. Add a caption to the table.
25. Assign a label to the table.

-   [ ] Replace the placeholder text in bold with a cross-reference to the table ;

> "The results of the logistic regression model are summarized in the formatted regression table, which is presented in **cross-reference**."

## Add references

![](images/clipboard-3622190034.png)

![](images/clipboard-1750453379.png)

## Finalise your MS Word report

``` yaml
---
title: My outbreak report
author: Helene Langet
date: last-modified
date-format: long

format:
  docx:
    reference-doc: swisstph_template.docx # <23>
    toc: true
    number-sections: true
    toc-depth: 2
echo: false
warning: false
---
```

24. Apply the Swiss TPH template `swisstph_template.docx` to your MS Word rendered report.

-   [ ] Create your own template and apply it to your MS Word rendered report.
