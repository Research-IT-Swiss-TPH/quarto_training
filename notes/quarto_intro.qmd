---
title: Analytically reproducible documents

author:
  - name:
      given: Hélène
      family: Langet
    affiliations:
      - name: Swiss TPH Research-IT
    orcid: 0000-0002-6758-2397
    email: helene.langet@swisstph.ch
license: "CC-BY"
date: last-modified
editor: source

format:
  html:
    default: true
    embed-resources: true
    code-link: true
    code-overflow: wrap
    theme: cosmo
    toc: true
    number-sections: true
    anchor-sections: true
    title-block-banner: true
    comments:
      hypothesis: 
        theme: classic
  revealjs:
    default: true
    embed-resources: true
    logo: ../images/swisstph_logo_compact.png
    css: ../css/logo.css
    footer: "Swiss TPH, Research-IT"
    code-overflow: wrap
    smaller: true
    slide-number: true
    show-slide-number: all
    
execute:
  echo: fenced
  warning: false
  
engine: knitr
---

## Research = a dynamic process

-   Research insights are typically disseminated through reports (e.g., scientific presentations, publications, etc), including a textual narrative detailing the research context, methods, and key findings, often supplemented with figures and tables to summarize results, and a final discussion, with findings serving as evidence to support conclusions and recommendations ;
-   Research is an **iterative** and **dynamic** process, meaning there are no **final** or **definitive** results or reports ;
-   In addition, we continuously build upon the work of others to generate new insights and discoveries.

[![Image from Jorge Cham (PhDComics)](images/phd031214s.gif){fig-align="center"}](https://phdcomics.com/comics/archive.php?comicid=1689)

## Reproducibility in research

![](../images/reproducibility.png){fig-align="center"}

## Analytically reproducible documents (1)

These documents typically contain 3 main types of content, integrating code and natural language in a way that is called "*literate programming*".

::: panel-tabset
### Formatted text

These are languages that can be written using any **plain text editor**. They use *markup* elements to define how text should be displayed or printed.

::: columns
::: {.column width="33%"}
#### HTML

HTML is used to structure content on the web.

```{r}
#| echo: false
cat("<b>This text will be displayed in bold</b>")
```
:::

::: {.column width="33%"}
#### LaTeX

LaTeX is used for academic and technical documents.

```{r}
#| echo: false
cat("\\textbf{This text will be displayed in bold}")
```
:::

::: {.column width="33%"}
#### Markdown

Markdown is a lightweight markup language.

```{r}
#| echo: false
cat("**This text will be displayed in bold**")
```
:::
:::

### Code commands

Different programming languages allow us to execute code to generate results or perform tasks.

::: columns
::: {.column width="33%"}
#### R

```{{r}}
library(ggplot2)
data.frame(country=c("Nigeria","Kenya","India"), prevalence=c(14.5,9.2,3.5)) |>
  ggplot(aes(x=country, y=prevalence)) +
  geom_bar(stat="identity", fill="steelblue")
```
:::

::: {.column width="33%"}
#### Python

```{r}
library(reticulate)
Sys.setenv(RETICULATE_PYTHON = "C:/ProgramData/anaconda3/python.exe")
```

```{{python}}
import matplotlib.pyplot as plt
plt.bar(['Nigeria', 'Kenya', 'India'], [14.5, 9.2, 3.5], color='steelblue')
plt.show()
```
:::

::: {.column width="33%"}
#### Observable JS

```{{ojs}}
BarChart({x: ["Nigeria", "Kenya", "India"], y: [14.5, 9.2, 3.5], yLabel: "Prevalence (%)"})
```
:::
:::

### Code outputs

The output from executing code often results in visualizations or printed results. Below are the corresponding outputs for each language:

::: columns
::: {.column width="33%"}
```{r}
#| echo: false
load(file = "../practicals/df1.RData")
df <- df |>
  dplyr::mutate(dplyr::across(c(sex, confirmed, death),
                              as.factor))
glm(confirmed ~ age,
    df,
    family = binomial)
```
:::

::: {.column width="33%"}
```{r}
#| echo: false
iris |>
  dplyr::select(Species, Sepal.Length) |> 
  dplyr::rename(c1 = Species,
                c2 = Sepal.Length) |> 
  head(5)  |>
  knitr::kable()
```
:::

::: {.column width="33%"}
```{r}
#| fig-height: 4
#| fig-width: 4
#| echo: false
library(ggplot2)
data.frame(country=c("Nigeria","Kenya","India"), prevalence=c(14.5,9.2,3.5)) |>
  ggplot(aes(x=country, y=prevalence)) +
  geom_bar(stat="identity", fill="steelblue")
```
:::
:::
:::

## Analytically reproducible documents (2)

Documents can be rendered in different type of outputs e.g., MS Word, PDF, HTML, PowerPoint, etc.

**Pandoc** is one of the tool that allows this conversion.

![](../images/paste-ABFB521E.png){fig-align="center"}

## Existing tools for writing analytically reproducible documents

![](../images/tools.png){fig-align="center"}

## Quarto

-   Quarto is the successor to R Markdown, but is not tied to the R language.
-   Quarto files have a `.qmd` extension.

::: columns
::: {.column width="50%"}
### Source document

![](../images/qmd_structure.png)
:::

::: {.column width="50%"}
### Rendered output

![](../images/qmd_rendered.png)
:::
:::

## Quarto rendered outputs

-   Quarto documents can be rendered into to many report formats including HTML, Word document and many more
-   [List of supported formats](https://quarto.org/docs/output-formats/all-formats.html)

![](images/clipboard-1220364644.png){fig-align="center"}

## Engines

Both knitr and Jupyter serve as engines to execute code embedded within a document, but they work in different programming environments.

::: panel-tabset
### knitr

This R package will read the code chunks, execute it, and 'knit' it back into the document. This is how tables and graphs are included alongside the text.

![](images/knitr-rmarkdown-logos-50-1.webp){fig-align="center" width="300"}

### Juypter

Jupyter is a popular engine for running Python code interactively. It supports multiple programming languages, but Python is the most common.

![](images/images.png){fig-align="center"}
:::

## References

-   [The Epidemiologist R Handbook](https://epirhandbook.com)
-   [Websites and dashboards with Quarto](https://thegraphcourses.org/courses/websites-and-dashboards-with-r/)
